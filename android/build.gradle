// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.2.31'
    ext.vers = [
            compileSdkVersion: 27,
            targetSdkVersion: 27,
            minSdkVersion: 19,
            buildToolsVersion: '27.0.3'
    ]

    repositories {
        mavenLocal()
        jcenter()
        maven { url 'https://maven.google.com' }
        maven { url 'https://maven.fabric.io/public' }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.fabric.tools:gradle:1.25.2'
        classpath 'com.squareup.sqldelight:gradle-plugin:0.6.1'
    }
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://maven.google.com" }
        maven { url 'https://maven.fabric.io/public' }
    }
}

subprojects {
    afterEvaluate {project ->
        if (project.name.contains('farebot') && project.hasProperty("android")) {
            android {
                compileSdkVersion vers.compileSdkVersion
                buildToolsVersion vers.buildToolsVersion

                defaultConfig {
                    minSdkVersion vers.minSdkVersion
                    targetSdkVersion vers.targetSdkVersion
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_7
                    targetCompatibility JavaVersion.VERSION_1_7
                }

                lintOptions {
                    abortOnError true
                    disable 'InvalidPackage','MissingTranslation'
                }

                dexOptions {
                    dexInProcess = true
                }
            }
        }
    }
}

apply from: 'dependencies.gradle'

ext {
    vers = [
            compileSdkVersion: 27,
            targetSdkVersion : 27,
            minSdkVersion    : 19,
            buildToolsVersion: '27.0.3'
    ]
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
